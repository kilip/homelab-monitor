---
name: "Action: Image Build"

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

env:
  API_PLATFORM_CREATE_CLIENT_ENTRYPOINT: http://caddy
  API_PLATFORM_CREATE_CLIENT_OUTPUT: .
  # On Linux, you may want to comment the following line for improved performance
  WATCHPACK_POLLING: "true"


jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup GHCR
        if: ${{ inputs.pushImages == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker Bake Action
        uses: docker/bake-action@v3
        with:
          push: false
          load: true
          set: |
            api.cache-from=type=gha
            api.cache-to=type=gha
            caddy.cache-from=type=gha
            caddy.cache-to=type=gha
            pwa.cache-from=type=gha
            pwa.cache-to=type=gha
      
      - name: Pull images
        run: docker compose pull --ignore-pull-failures || true

      - name: Start services
        run: |
          docker compose -f docker-compose.yml up --build -d

      - name: Wait for services
        run: |
          while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q api)")"; do
            case $status in
              starting) sleep 1;;
              healthy) exit 0;;
              unhealthy)
                docker compose ps
                docker compose logs
                exit 1
              ;;
            esac
          done
          exit 1

      - name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost

      - name: Check API reachability
        run: curl -vk -o /dev/null https://localhost

      - name: Check PWA reachability
        run: "curl -vk -o /dev/null -H 'Accept: text/html' https://localhost"

      - name: Create test database
        run: |
          docker compose exec -T php bin/console -e test doctrine:database:create
          docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction

      - name: PHPUnit
        run: docker compose exec -T php bin/phpunit

      - name: Doctrine Schema Validator
        run: docker compose exec -T php bin/console doctrine:schema:validate
